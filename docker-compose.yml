services:
  postgres:
    image: docker.io/library/postgres:15
    container_name: mfreelance-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    image: docker.io/library/redis:7
    container_name: mfreelance-redis
    restart: unless-stopped
    ports:
      - "${REDIS_PORT}:6379"
    command: redis-server --appendonly yes

  php:
    build:
      context: .
      dockerfile: Dockerfile.php
    container_name: mfreelance-php
    restart: unless-stopped
    ports:
      - "8585:80"
    #volumes:
      #- ./petri-frontendphp:/var/www/html
    command: sh -c "apt-get update && apt-get install -y socat && socat TCP-LISTEN:9999,fork TCP:mfreelance-go:9999 & a2enmod rewrite & apache2-foreground"
      #- /usr/bin/sh -c "chown www-data -R /var/log/apache2"
      #- /proc/self/fd/1:/var/log/apache2/access.log
      #- /proc/self/fd/1:/var/log/apache2/error.log
  electrum-server:
    build:
      context: .
      dockerfile: Dockerfile.electrum
    ports:
      - "127.0.0.1:${ELECTRUM_PORT}:${ELECTRUM_PORT}"
    environment:
      #- ELECTRUM_NETWORK=testnet
      - ELECTRUM_TESTNET=true
    restart: unless-stopped
    #command: sh -c "electrum --offline $( [ "$ELECTRUM_TESTNET" = "true" ] && echo "--testnet" ) create || true"
  go-server:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mfreelance-go
    restart: unless-stopped
    ports:
      - "9999:9999"
    env_file:
      - .env
    depends_on:
      - postgres
      - redis
    environment:
      - ELECTRUM_NETWORK=testnet

volumes:
  pgdata:

